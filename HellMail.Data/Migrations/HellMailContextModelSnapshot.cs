// <auto-generated />
using HellMail.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HellMail.Data.Migrations
{
    [DbContext(typeof(HellMailContext))]
    partial class HellMailContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HellMail.Domain.Mail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserDestinationId");

                    b.Property<int>("UserSourceId");

                    b.Property<string>("message");

                    b.Property<string>("subject");

                    b.HasKey("id");

                    b.HasIndex("UserDestinationId");

                    b.HasIndex("UserSourceId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("HellMail.Domain.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("firstname");

                    b.Property<string>("password");

                    b.Property<string>("surname");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HellMail.Domain.Mail", b =>
                {
                    b.HasOne("HellMail.Domain.User", "UserDestination")
                        .WithMany()
                        .HasForeignKey("UserDestinationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HellMail.Domain.User", "UserSource")
                        .WithMany()
                        .HasForeignKey("UserSourceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
